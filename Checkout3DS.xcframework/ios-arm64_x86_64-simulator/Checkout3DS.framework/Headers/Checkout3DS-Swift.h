#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef CHECKOUT3DS_SWIFT_H
#define CHECKOUT3DS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Checkout3DS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



/// This enum holds the details for the error result of the authentication process.
/// note:
/// This enum conforms to the Swift error type, therefore it will be bridged to Objective-C through the generation of an error domain constant and corresponding error code constants.
typedef SWIFT_ENUM_NAMED(NSInteger, Checkout3DSAuthenticationError, "AuthenticationError", open) {
/// An invalid Session ID was provided.
  Checkout3DSAuthenticationErrorInvalidSessionID = 1000,
/// A sessions API resource was requested without valid authentication credentials. This can occur when an invalid session secret is provided.
  Checkout3DSAuthenticationErrorUnauthorizedSessionsRequest = 1001,
/// The authentication process was cancelled by the user.
  Checkout3DSAuthenticationErrorChallengeCancelled = 1002,
/// The authentication timed out whilst waiting for the user to complete the challenge.
  Checkout3DSAuthenticationErrorChallengeTimeout = 1003,
/// The authentication completed but was unsuccessful.
  Checkout3DSAuthenticationErrorAuthenticationVerificationUnsuccessful = 1004,
/// A second authentication request was made before the first request is completed with the same <code>sessionID</code>.
  Checkout3DSAuthenticationErrorDuplicateAuthenticationRequest = 1006,
/// A second authentication request was made before the first request is completed with a different <code>sessionID</code>.
  Checkout3DSAuthenticationErrorConcurrentAuthenticationRequest = 1007,
/// The SDK’s info.plist has been modified. To ensure security, the 3DS SDK will not operate will an amended info.plist.
  Checkout3DSAuthenticationErrorSdkPListModified = 1008,
/// Certificate Transparency for Checkout.com domains have been overridden by the app’s info.plist.
  Checkout3DSAuthenticationErrorCertificateTransparencyOverriddenByApp = 1009,
/// No internet connectivity.
  Checkout3DSAuthenticationErrorNoInternetConnectivity = 2000,
/// Connection failed.
  Checkout3DSAuthenticationErrorConnectionFailed = 2001,
/// Connection timeout.
  Checkout3DSAuthenticationErrorConnectionTimeout = 2002,
/// A client or server connection was severed in the middle of an in-progress load.
/// See <a href="https://developer.apple.com/documentation/foundation/1508628-url_loading_system_error_codes/nsurlerrornetworkconnectionlost">NSURLErrorNetworkConnectionLost</a> for more detail.
  Checkout3DSAuthenticationErrorConnectionLost = 2003,
/// The attempted connection required activating a data context while roaming, but international roaming is disabled.
/// See <a href="https://developer.apple.com/documentation/foundation/nsurlerrorinternationalroamingoff">NSURLErrorInternationalRoamingOff</a> for more detail.
  Checkout3DSAuthenticationErrorInternationalRoamingOff = 2004,
/// The URL Loading System encountered an error that it can’t interpret or the error code received from URLSession does not match the ones above.
/// See <a href="https://developer.apple.com/documentation/foundation/nsurlerrorunknown">NSURLErrorUnknown</a> for more detail.
  Checkout3DSAuthenticationErrorUnknownNetworkError = 2005,
/// Certificate Transparency Check Failed.
  Checkout3DSAuthenticationErrorCertificateTransparencyChecksFailed = 2006,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3010 = 3010,
/// Challenge limit of 255 exceeded.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3011 = 3011,
/// An error was reported by the card issuer.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3012 = 3012,
/// Challenge limit of 255 exceeded.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3013 = 3013,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3101 = 3101,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3102 = 3102,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3201 = 3201,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3202 = 3202,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3203 = 3203,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3204 = 3204,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3302 = 3302,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3303 = 3303,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3304 = 3304,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3305 = 3305,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3306 = 3306,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3307 = 3307,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3308 = 3308,
/// The transaction timed out.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3402 = 3402,
/// The card issuer reported that authentication could not be performed, due to a technical or other problem.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3500 = 3500,
/// An error was reported by the 3DS Server.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3501 = 3501,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3505 = 3505,
/// Sessions API: CA Root certificate is missing in Sessions payload /
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3514 = 3514,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3515 = 3515,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3523 = 3523,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3524 = 3524,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3525 = 3525,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3526 = 3526,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3527 = 3527,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3528 = 3528,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3529 = 3529,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3530 = 3530,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3533 = 3533,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3534 = 3534,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3536 = 3536,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3537 = 3537,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3538 = 3538,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3540 = 3540,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3541 = 3541,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3542 = 3542,
/// The SDK identified an error in the challenge data provided by the card issuer.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3543 = 3543,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3544 = 3544,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3545 = 3545,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3546 = 3546,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3547 = 3547,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3548 = 3548,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3549 = 3549,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3550 = 3550,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3551 = 3551,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3552 = 3552,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3553 = 3553,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3554 = 3554,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3555 = 3555,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3556 = 3556,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3557 = 3557,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3558 = 3558,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3559 = 3559,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3560 = 3560,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3561 = 3561,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3562 = 3562,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3563 = 3563,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4004 = 4004,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4005 = 4005,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4018 = 4018,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4019 = 4019,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4020 = 4020,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4023 = 4023,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4024 = 4024,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4025 = 4025,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4026 = 4026,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4027 = 4027,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4028 = 4028,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4030 = 4030,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4031 = 4031,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4032 = 4032,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4034 = 4034,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4035 = 4035,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4036 = 4036,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4037 = 4037,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4038 = 4038,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4039 = 4039,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4040 = 4040,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4042 = 4042,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4043 = 4043,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4044 = 4044,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4045 = 4045,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4048 = 4048,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4049 = 4049,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4050 = 4050,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4051 = 4051,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4052 = 4052,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4053 = 4053,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4054 = 4054,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5001 = 5001,
/// The card issuer reported an error.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5002 = 5002,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5003 = 5003,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5004 = 5004,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5006 = 5006,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5007 = 5007,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5008 = 5008,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5500 = 5500,
};
static NSString * _Nonnull const Checkout3DSAuthenticationErrorDomain = @"Checkout3DS.AuthenticationError";

@class NSString;

/// The class used to provide input parameters required for an authentication request.
SWIFT_CLASS_NAMED("AuthenticationParameters")
@interface Checkout3DSAuthenticationParameters : NSObject
/// The unique ID of the authentication session.
/// You will have received this in the response to the create session call to our Sessions API.
@property (nonatomic, readonly, copy) NSString * _Nonnull sessionID;
/// The session secret. You will have received this in the response to the create session
/// call to our Sessions API.
@property (nonatomic, readonly, copy) NSString * _Nonnull sessionSecret;
/// The name of the customer’s card scheme.
/// You will have received this in the response to the create session call to our Sessions API.
/// Used to display the scheme’s logo on the progress user interface.
/// Example: <code>Visa</code>, <code>Mastercard</code>
@property (nonatomic, readonly, copy) NSString * _Nonnull scheme;
/// Initializes an AuthenticationParameters object.
/// \param sessionID The unique ID of the authentication session.
/// You will have received this in the response to the create session call to our Sessions API.
///
/// \param sessionSecret The session secret. You will have received this in the response to the create session
/// call to our Sessions API.
///
/// \param scheme The name of the customer’s card scheme. You will have received this in the response to the create session call to our Sessions API.
/// Used to display the scheme’s logo on the progress user interface. Example: Visa, Mastercard.
///
- (nonnull instancetype)initWithSessionID:(NSString * _Nonnull)sessionID sessionSecret:(NSString * _Nonnull)sessionSecret scheme:(NSString * _Nonnull)scheme OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIFont;
@class UIColor;

/// A basic customization protocol providing a font and a text color.
/// This protocol is conformed to by all customization types (see <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a>, <a href="x-source-tag://LabelCustomization">LabelnCustomization</a>,
/// <a href="x-source-tag://EntrySelectionCustomization">EntrySelectionCustomization</a>, and <a href="x-source-tag://ToolbarCustomization">ToolbarCustomization</a> for more specific view-related customizations.)
SWIFT_PROTOCOL_NAMED("Customization")
@protocol Checkout3DSCustomization
/// The font of the text used on the view.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The color of the text on the view.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
@end

@class NSNumber;

/// Customization for the buttons that appear on the challenge screen.
SWIFT_PROTOCOL_NAMED("ButtonCustomization")
@protocol Checkout3DSButtonCustomization <Checkout3DSCustomization>
/// The background color of the button.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius of the button.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve style for the border of the button.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The width of the border for the button.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The color of the border for the button.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
@property (nonatomic, readonly) CGSize shadowOffset;
@property (nonatomic, readonly) CGFloat shadowRadius;
@property (nonatomic, readonly) float shadowOpacity;
@end


SWIFT_PROTOCOL_NAMED("ButtonCustomizations")
@protocol Checkout3DSButtonCustomizations
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull verifyButtonCustomization;
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull continueFlowButtonCustomization;
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull nextButtonCustomization;
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull cancelButtonCustomization;
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull resendButtonCustomization;
@end

enum Checkout3DSEnvironment : NSInteger;
@class NSLocale;
@protocol Checkout3DSUICustomization;
@class NSURL;
@class NSSet;

/// The main class of the SDK that performs payment authentication and returns a list of warnings collected by the SDK concerning security.
SWIFT_CLASS("_TtC11Checkout3DS18Checkout3DSService")
@interface Checkout3DSService : NSObject
/// Initializes a Checkout3DSService object with default arguments.
- (nonnull instancetype)init;
/// Initializes a Checkout3DSService object.
/// \param environment (optional) The Checkout.com environment that the SDK will connect to. If no value is provided, the default is production. See <a href="x-source-tag://Environment">Environment</a> for more information.
/// <ul>
///   <li>
///     <code>sandbox</code>: enables you to test with Checkout.com’s systems without connecting to real card issuers or impacting real card holders.
///   </li>
///   <li>
///     <code>production</code>: to process real transactions with real cards.
///   </li>
/// </ul>
///
/// \param locale (optional) The customer’s locale and preferred language, used to localise the user interface. If no value is set, the device locale is used. (E.g. “en_GB”)
///
/// \param uiCustomization The customizations for the challenge user interface. See <a href="x-source-tag://UICustomization">UICustomization</a> for more information.
///
- (nonnull instancetype)initWithEnvironment:(enum Checkout3DSEnvironment)environment locale:(NSLocale * _Nonnull)locale uiCustomization:(id <Checkout3DSUICustomization> _Nonnull)uiCustomization appURL:(NSURL * _Nullable)appURL;
/// Method to start the the authentication, passing the values you received in the Sessions API response into <code>authenticationParameters</code>.
/// note:
/// Ensure there is a key window available (a <code>UIWindow</code> where <code>UIWindow.isKeyWindow</code> is <code>true</code>).
/// This is usually the case, except for particular circumstances such as when <code>viewDidLoad</code> is called for the first <code>UIViewController</code> on app launch,
/// before a key window has been assigned.
/// \param authenticationParameters The authentication parameters, including <code>sessionId</code>, <code>sessionSecret</code>, and <code>scheme</code>.
///
/// \param completionHandler Closure called on completion with the following value:
///
/// \param error If authentication fails, an <code>NSError</code> indicating the reason for failure, otherwise <code>nil</code>.
///
- (void)authenticateWithAuthenticationParameters:(Checkout3DSAuthenticationParameters * _Nonnull)authenticationParameters completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completionHandler;
/// A method your app can optionally call to bring the challenge UI to the foreground.
/// That’s useful when the user is returning from their banking app (when they call your appURL) as part of an out-of-band challenge.
/// The method will return true if an active authentication session is found, or will otherwise return false.
/// Note : The maximum allowed URL length is 211 characters.
/// \param url The deep link URL provided to the app by an app that handles out-of-band authentication.
///
+ (BOOL)handleAppURLWithUrl:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
/// Method to check for warnings of any potential security warnings or of rejected configuration requests.
/// Use when initializing the SDK, or any time afterwards.
/// note:
/// this method blocks the calling thread. It is recommended to call this on a
/// background thread and not the main thread.
///
/// returns:
/// a collection of any warnings gathered by the 3DS SDK.
- (NSSet * _Nonnull)getWarnings SWIFT_WARN_UNUSED_RESULT;
/// Frees up resources that are used by <code>Checkout3DSService</code>.
- (void)cleanup;
@end





/// A <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultButtonCustomization")
@interface Checkout3DSDefaultButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
/// Initializes a DefaultButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nullable)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A  DefaultButtonCustomizations class for the different buttons that appear on the challenge screen.
SWIFT_CLASS_NAMED("DefaultButtonCustomizations")
@interface Checkout3DSDefaultButtonCustomizations : NSObject <Checkout3DSButtonCustomizations>
/// The ButtonCustomization object for customizing the verify button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull verifyButtonCustomization;
/// The ButtonCustomization object for customizing the continue button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull continueFlowButtonCustomization;
/// The ButtonCustomization object for customizing the next button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull nextButtonCustomization;
/// The ButtonCustomization object for customizing the cancel button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull cancelButtonCustomization;
/// The ButtonCustomization object for customizing the resend button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull resendButtonCustomization;
- (nonnull instancetype)init;
/// Initializes a DefaultButtonCustomizations object for verify, continue, next, cancel and resend buttons and also allows the customization of the buttons if needed.
- (nonnull instancetype)initWithVerifyButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)verifyButtonCustomization continueFlowButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)continueFlowButtonCustomization nextButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)nextButtonCustomization cancelButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)cancelButtonCustomization resendButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)resendButtonCustomization OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the cancel button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultCancelButtonCustomization")
@interface Checkout3DSDefaultCancelButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The text to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
/// The background color to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The background cornor radius to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The background corner curve to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The text border width to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultCancelButtonCustomization object which is available for iOS 13.0 and later.
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text backgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultCancelButtonCustomization object.
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text backgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the continue button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultContinueButtonCustomization")
@interface Checkout3DSDefaultContinueButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultContinueButtonCustomization object available for iOS 13.0 and later.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultContinueButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// Customization for the text field on the challenge screen, for the text one-time passcode challenge.
SWIFT_PROTOCOL_NAMED("EntrySelectionCustomization")
@protocol Checkout3DSEntrySelectionCustomization <Checkout3DSCustomization>
/// The width of the border for the text field.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The color of the border for the text field. To get the <code>CGColor</code> version of a <code>UIColor</code> object, access the <code>cgColor</code> instance property of <code>UIColor</code>.
@property (nonatomic, readonly) CGColorRef _Nonnull borderColor;
/// The radius for the corner of the text field.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve style for the border of the text field.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The border style of the text field.
@property (nonatomic, readonly) UITextBorderStyle borderStyle;
/// The background color of the text box.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The color of the selection element when it is not selected.
/// For example, the radio buttons for the ‘Single Select’ challenge flow.
@property (nonatomic, readonly, strong) UIColor * _Nonnull unselectedColor;
/// The color of the selection element. For example, the radio buttons for the ‘Single Select’ challenge flow.
@property (nonatomic, readonly, strong) UIColor * _Nonnull selectedColor;
@end


/// A <a href="x-source-tag://EntrySelectionCustomization">EntrySelectionCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultEntrySelectionCustomization")
@interface Checkout3DSDefaultEntrySelectionCustomization : NSObject <Checkout3DSEntrySelectionCustomization>
/// The border width color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The shadow color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) CGColorRef _Nonnull borderColor;
/// The corner radius to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) UITextBorderStyle borderStyle;
/// The background color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The color of the selection element when it is not selected.
/// For example, the radio buttons for the ‘Single Select’ challenge flow.
@property (nonatomic, readonly, strong) UIColor * _Nonnull unselectedColor;
/// The color of the selection element. For example, the radio buttons for the ‘Single Select’ challenge flow.
@property (nonatomic, readonly, strong) UIColor * _Nonnull selectedColor;
- (nonnull instancetype)init;
/// Initializes a DefaultEntrySelectionCustomization object which is available for iOS 13.0 and later.
- (nonnull instancetype)initWithBorderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nonnull)borderColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderStyle:(UITextBorderStyle)borderStyle backgroundColor:(UIColor * _Nonnull)backgroundColor unselectedColor:(UIColor * _Nonnull)unselectedColor selectedColor:(UIColor * _Nonnull)selectedColor OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13);
/// Initializes a DefaultEntrySelectionCustomization object supporting from iOS 11 and obsoleted for iOS 13.
- (nonnull instancetype)initWithBorderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nonnull)borderColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderStyle:(UITextBorderStyle)borderStyle backgroundColor:(UIColor * _Nonnull)backgroundColor unselectedColor:(UIColor * _Nonnull)unselectedColor selectedColor:(UIColor * _Nonnull)selectedColor OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=11,obsoleted=13);
@end


/// Customization for the footer on the challenge screen.
SWIFT_PROTOCOL_NAMED("FooterCustomization")
@protocol Checkout3DSDefaultFooterCustomization <Checkout3DSCustomization>
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The font of the heading for each expandable footer item.
@property (nonatomic, readonly, strong) UIFont * _Nonnull labelFont;
/// The text color of the heading for each expandable footer item.
@property (nonatomic, readonly, strong) UIColor * _Nonnull labelTextColor;
/// The color for the expandable disclosure indicator for each expandable footer item.
@property (nonatomic, readonly, strong) UIColor * _Nonnull expandIndicatorColor;
@end


/// A <a href="x-source-tag://DefaultFooterCustomization">DefaultFooterCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultFooterCustomization")
@interface Checkout3DSDefaultFooterCustomization : NSObject <Checkout3DSDefaultFooterCustomization>
/// The background color to be set for DefaultFooterCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The font to be set for DefaultFooterCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultFooterCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The font of the heading for each expandable footer item.
@property (nonatomic, readonly, strong) UIFont * _Nonnull labelFont;
/// The text color of the heading for each expandable footer item.
@property (nonatomic, readonly, strong) UIColor * _Nonnull labelTextColor;
/// The color for the expandable disclosure indicator for each expandable footer item.
@property (nonatomic, readonly, strong) UIColor * _Nonnull expandIndicatorColor;
- (nonnull instancetype)init;
/// Initializes a DefaultFooterCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor labelFont:(UIFont * _Nonnull)labelFont labelTextColor:(UIColor * _Nonnull)labelTextColor expandIndicatorColor:(UIColor * _Nonnull)expandIndicatorColor OBJC_DESIGNATED_INITIALIZER;
@end


/// Customization for the labels that appear on the challenge screen.
SWIFT_PROTOCOL_NAMED("LabelCustomization")
@protocol Checkout3DSLabelCustomization <Checkout3DSCustomization>
/// The color of the heading text on the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull headingTextColor;
/// The font of the heading text on the challenge screen.
@property (nonatomic, readonly, strong) UIFont * _Nonnull headingFont;
@end


/// A <a href="x-source-tag://LabelCustomization">LabelCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultLabelCustomization")
@interface Checkout3DSDefaultLabelCustomization : NSObject <Checkout3DSLabelCustomization>
/// The color of the heading text on the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull headingTextColor;
/// The font of the heading text on the challenge screen.
@property (nonatomic, readonly, strong) UIFont * _Nonnull headingFont;
/// The font of the DefaultLabelCustomizationt on the challenge screen.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color of the DefaultLabelCustomizationt on the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
- (nonnull instancetype)init;
/// Initializes a DefaultLabelCustomization object.
- (nonnull instancetype)initWithHeadingTextColor:(UIColor * _Nonnull)headingTextColor headingFont:(UIFont * _Nonnull)headingFont font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the next button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultNextButtonCustomization")
@interface Checkout3DSDefaultNextButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultNextButtonCustomization object available for iOS 13.0 and later.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultNextButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the resend button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultResendButtonCustomization")
@interface Checkout3DSDefaultResendButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultResendButtonCustomization object available for iOS 13.0 and later.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultResendButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// Class used to provide system colors available from iOS 13 seamlessly in all supported iOS versions.
SWIFT_CLASS_NAMED("DefaultSystemColor")
@interface Checkout3DSDefaultSystemColor : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// The color for text labels that contain primary content.
/// note:
/// see <a href="https://developer.apple.com/documentation/uikit/uicolor/3173131-label">Apple’s documentation</a> for further info
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull label;)
+ (UIColor * _Nonnull)label SWIFT_WARN_UNUSED_RESULT;
/// The color for text labels that contain secondary content.
/// note:
/// see <a href="https://developer.apple.com/documentation/uikit/uicolor/3173136-secondarylabel">Apple’s documentation</a> for further info
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondaryLabel;)
+ (UIColor * _Nonnull)secondaryLabel SWIFT_WARN_UNUSED_RESULT;
/// A sixth-level shade of grey that adapts to the environment.
/// note:
/// see <a href="https://developer.apple.com/documentation/uikit/uicolor/3255075-systemgray6">Apple’s documentation</a> for further info
/// :nodoc:
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray6;)
+ (UIColor * _Nonnull)systemGray6 SWIFT_WARN_UNUSED_RESULT;
@end


/// Customization for the navigation bar on the challenge screen.
SWIFT_PROTOCOL_NAMED("ToolbarCustomization")
@protocol Checkout3DSToolbarCustomization <Checkout3DSCustomization>
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The title for the navigation bar for the challenge screen.
@property (nonatomic, readonly, copy) NSString * _Nullable headerTitle;
/// The title for the dismissal button on the navigation bar for the challenge screen.
@property (nonatomic, readonly, copy) NSString * _Nullable buttonTitle;
@end


/// A <a href="x-source-tag://ToolbarCustomization">ToolbarCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultToolbarCustomization")
@interface Checkout3DSDefaultToolbarCustomization : NSObject <Checkout3DSToolbarCustomization>
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The title for the navigation bar for the challenge screen.
@property (nonatomic, readonly, copy) NSString * _Nullable headerTitle;
/// The title for the dismissal button on the navigation bar for the challenge screen.
@property (nonatomic, readonly, copy) NSString * _Nullable buttonTitle;
/// The font of title in the navigation bar of the challenge screen
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
- (nonnull instancetype)init;
/// Initializes a DefaultToolbarCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor headerTitle:(NSString * _Nullable)headerTitle buttonTitle:(NSString * _Nullable)buttonTitle font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor OBJC_DESIGNATED_INITIALIZER;
@end

@protocol Checkout3DSWhitelistCustomization;

/// Used to provide objects that specify user interface customizations for the 3D Secure 2 challenge screens.
SWIFT_PROTOCOL_NAMED("UICustomization")
@protocol Checkout3DSUICustomization
/// The customization for the navigation bar on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSToolbarCustomization> _Nonnull toolbarCustomization;
/// The customization for the labels on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSLabelCustomization> _Nonnull labelCustomization;
/// The customization for the text field on the challenge screen,
/// for the text one-time passcode challenge.
@property (nonatomic, readonly, strong) id <Checkout3DSEntrySelectionCustomization> _Nonnull entrySelectionCustomization;
/// The customization for the buttons on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomizations> _Nonnull buttonCustomizations;
/// The customization for the footer on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSDefaultFooterCustomization> _Nonnull footerCustomization;
/// The customization for whitelist on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSWhitelistCustomization> _Nonnull whitelistCustomization;
@end


/// A default customization object with pre-defined colors and fonts.
/// You may use this object to access other default customization objects.
SWIFT_CLASS_NAMED("DefaultUICustomization")
@interface Checkout3DSDefaultUICustomization : NSObject <Checkout3DSUICustomization>
/// The toolbar customization object for the navigation bar on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSToolbarCustomization> _Nonnull toolbarCustomization;
/// The customization for the labels that appear on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSLabelCustomization> _Nonnull labelCustomization;
/// The customization for the text field on the challenge screen,
/// for the text one-time passcode challenge.
@property (nonatomic, readonly, strong) id <Checkout3DSEntrySelectionCustomization> _Nonnull entrySelectionCustomization;
/// The customization for the buttons that appear on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomizations> _Nonnull buttonCustomizations;
/// The customization for the footer that appear on the challenge screen.
@property (nonatomic, strong) id <Checkout3DSDefaultFooterCustomization> _Nonnull footerCustomization;
/// The customization for the WhitelistCustomization object that appear on the challenge screen.
@property (nonatomic, strong) id <Checkout3DSWhitelistCustomization> _Nonnull whitelistCustomization;
/// Creates a <a href="x-source-tag://UICustomization">UICustomization</a> object with default customizations.
- (nonnull instancetype)init;
/// Creates a <a href="x-source-tag://UICustomization">UICustomization</a> object with the ability to pass in
/// other customization objects. If any are excluded from initialisation, the appropiate default customization
/// object will be used.
/// \param toolbarCustomization The toolbar customization object for the navigation bar on the challenge screen.
/// If this is omitted, a <a href="x-source-tag://DefaultToolbarCustomization">DefaultToolbarCustomization</a> object will be used.
///
/// \param labelCustomization The customization for the labels that appear on the challenge screen.
/// If this is omitted, a <a href="x-source-tag://DefaultLabelCustomization">DefaultLabelCustomization</a> object will be used.
///
/// \param entrySelectionCustomization The customization for the text field on the challenge screen, for the text one-time passcode challenge.
/// If this is omitted, a <a href="x-source-tag://DefaultButtonCustomization">DefaultButtonCustomization</a> objects will be used.
///
/// \param buttonCustomizations The customization for the buttons that appear on the challenge screen.
/// If this is omitted, a <a href="x-source-tag://DefaultToolbarCustomization">DefaultToolbarCustomization</a> object will be used.
///
- (nonnull instancetype)initWithToolbarCustomization:(id <Checkout3DSToolbarCustomization> _Nonnull)toolbarCustomization labelCustomization:(id <Checkout3DSLabelCustomization> _Nonnull)labelCustomization entrySelectionCustomization:(id <Checkout3DSEntrySelectionCustomization> _Nonnull)entrySelectionCustomization buttonCustomizations:(id <Checkout3DSButtonCustomizations> _Nonnull)buttonCustomizations footerCustomization:(id <Checkout3DSDefaultFooterCustomization> _Nonnull)footerCustomization whitelistCustomization:(id <Checkout3DSWhitelistCustomization> _Nonnull)whitelistCustomization OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the verify button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultVerifyButtonCustomization")
@interface Checkout3DSDefaultVerifyButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultVerifyButtonCustomization object available for iOS 13.0 and later.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultVerifyButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// Customization for the footer on the challenge screen.
SWIFT_PROTOCOL_NAMED("WhitelistCustomization")
@protocol Checkout3DSWhitelistCustomization <Checkout3DSCustomization>
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nullable switchTintColor;
@end


/// A <a href="x-source-tag://DefaultWhitelistCustomization">DefaultWhitelistCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultWhitelistCustomization")
@interface Checkout3DSDefaultWhitelistCustomization : NSObject <Checkout3DSWhitelistCustomization>
/// The font text on the navigation bar for the challenge screen.
@property (nonatomic, strong) UIFont * _Nonnull font;
/// The background color of the text on navigation bar for the challenge screen.
@property (nonatomic, strong) UIColor * _Nonnull textColor;
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nullable switchTintColor;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFont:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor switchTintColor:(UIColor * _Nullable)switchTintColor OBJC_DESIGNATED_INITIALIZER;
@end




/// An environment that specifies which endpoint to connect to during the 3DS flow.
typedef SWIFT_ENUM_NAMED(NSInteger, Checkout3DSEnvironment, "Environment", open) {
/// A  case for environment which connects to sandbox.
  Checkout3DSEnvironmentSandbox = 0,
/// A  case for environment which connects to production.
  Checkout3DSEnvironmentProduction = 1,
};


















/// Represents a warning produced by the 3DS SDK, either due to potential security issues found, or to communicate a rejected configuration request.
typedef SWIFT_ENUM_NAMED(NSInteger, Checkout3DSWarning, "Warning", open) {
/// The appURL provided exceeds 211 characters and so has been ignored.
  Checkout3DSWarningAppURLTooLong = 0,
/// The appURL is not in a recognised Universal App Link format and so has been ignored.
  Checkout3DSWarningAppURLFormatInvalid = 1,
/// A debugger is attached to the App.
  Checkout3DSWarningDebuggerAttached = 2,
/// A emulator is being used to run the App.
  Checkout3DSWarningRunningOnSimulator = 3,
/// The device is jailbroken.
  Checkout3DSWarningJailbroken = 4,
/// The integrity of the SDK has been tampered.
  Checkout3DSWarningIntegrityTampered = 5,
};


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef CHECKOUT3DS_SWIFT_H
#define CHECKOUT3DS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Checkout3DS",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



/// This enum holds the details for the error result of the authentication process.
/// note:
/// This enum conforms to the Swift error type, therefore it will be bridged to Objective-C through the generation of an error domain constant and corresponding error code constants.
typedef SWIFT_ENUM_NAMED(NSInteger, Checkout3DSAuthenticationError, "AuthenticationError", open) {
/// An invalid Session ID was provided.
  Checkout3DSAuthenticationErrorInvalidSessionID = 1000,
/// A sessions API resource was requested without valid authentication credentials. This can occur when an invalid session secret is provided.
  Checkout3DSAuthenticationErrorUnauthorizedSessionsRequest = 1001,
/// The authentication process was cancelled by the user.
  Checkout3DSAuthenticationErrorChallengeCancelled = 1002,
/// The authentication timed out whilst waiting for the user to complete the challenge.
  Checkout3DSAuthenticationErrorChallengeTimeout = 1003,
/// The authentication completed but was unsuccessful.
  Checkout3DSAuthenticationErrorAuthenticationVerificationUnsuccessful = 1004,
/// A second authentication request was made before the first request is completed with the same <code>sessionID</code>.
  Checkout3DSAuthenticationErrorDuplicateAuthenticationRequest = 1006,
/// A second authentication request was made before the first request is completed with a different <code>sessionID</code>.
  Checkout3DSAuthenticationErrorConcurrentAuthenticationRequest = 1007,
/// The SDK’s info.plist has been modified. To ensure security, the 3DS SDK will not operate will an amended info.plist.
  Checkout3DSAuthenticationErrorSdkPListModified = 1008,
/// Certificate Transparency for Checkout.com domains have been overridden by the app’s info.plist.
  Checkout3DSAuthenticationErrorCertificateTransparencyOverriddenByApp = 1009,
/// No internet connectivity.
  Checkout3DSAuthenticationErrorNoInternetConnectivity = 2000,
/// Connection failed.
  Checkout3DSAuthenticationErrorConnectionFailed = 2001,
/// Connection timeout.
  Checkout3DSAuthenticationErrorConnectionTimeout = 2002,
/// A client or server connection was severed in the middle of an in-progress load.
/// See <a href="https://developer.apple.com/documentation/foundation/1508628-url_loading_system_error_codes/nsurlerrornetworkconnectionlost">NSURLErrorNetworkConnectionLost</a> for more detail.
  Checkout3DSAuthenticationErrorConnectionLost = 2003,
/// The attempted connection required activating a data context while roaming, but international roaming is disabled.
/// See <a href="https://developer.apple.com/documentation/foundation/nsurlerrorinternationalroamingoff">NSURLErrorInternationalRoamingOff</a> for more detail.
  Checkout3DSAuthenticationErrorInternationalRoamingOff = 2004,
/// The URL Loading System encountered an error that it can’t interpret or the error code received from URLSession does not match the ones above.
/// See <a href="https://developer.apple.com/documentation/foundation/nsurlerrorunknown">NSURLErrorUnknown</a> for more detail.
  Checkout3DSAuthenticationErrorUnknownNetworkError = 2005,
/// Certificate Transparency Check Failed.
  Checkout3DSAuthenticationErrorCertificateTransparencyChecksFailed = 2006,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3010 = 3010,
/// Challenge limit of 255 exceeded.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3011 = 3011,
/// An error was reported by the card issuer.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3012 = 3012,
/// Challenge limit of 255 exceeded.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3013 = 3013,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3101 = 3101,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3102 = 3102,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3201 = 3201,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3202 = 3202,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3203 = 3203,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3204 = 3204,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3302 = 3302,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3303 = 3303,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3304 = 3304,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3305 = 3305,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3306 = 3306,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3307 = 3307,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3308 = 3308,
/// The transaction timed out.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3402 = 3402,
/// The card issuer reported that authentication could not be performed, due to a technical or other problem.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3500 = 3500,
/// An error was reported by the 3DS Server.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3501 = 3501,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3505 = 3505,
/// Sessions API: CA Root certificate is missing in Sessions payload /
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3514 = 3514,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3515 = 3515,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3523 = 3523,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3524 = 3524,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3525 = 3525,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3526 = 3526,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3527 = 3527,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3528 = 3528,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3529 = 3529,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3530 = 3530,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3533 = 3533,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3534 = 3534,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3536 = 3536,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3537 = 3537,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3538 = 3538,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3540 = 3540,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3541 = 3541,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3542 = 3542,
/// The SDK identified an error in the challenge data provided by the card issuer.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3543 = 3543,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3544 = 3544,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3545 = 3545,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3546 = 3546,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3547 = 3547,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3548 = 3548,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3549 = 3549,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3550 = 3550,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3551 = 3551,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3552 = 3552,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3553 = 3553,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3554 = 3554,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3555 = 3555,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3556 = 3556,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3557 = 3557,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3558 = 3558,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3559 = 3559,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3560 = 3560,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3561 = 3561,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3562 = 3562,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS2ProtocolError3563 = 3563,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4004 = 4004,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4005 = 4005,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4018 = 4018,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4019 = 4019,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4020 = 4020,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4023 = 4023,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4024 = 4024,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4025 = 4025,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4026 = 4026,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4027 = 4027,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4028 = 4028,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4030 = 4030,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4031 = 4031,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4032 = 4032,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4034 = 4034,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4035 = 4035,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4036 = 4036,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4037 = 4037,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4038 = 4038,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4039 = 4039,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4040 = 4040,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4042 = 4042,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4043 = 4043,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4044 = 4044,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4045 = 4045,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4048 = 4048,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4049 = 4049,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4050 = 4050,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4051 = 4051,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4052 = 4052,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4053 = 4053,
/// An internal SDK error occurred.
  Checkout3DSAuthenticationErrorInternalError4054 = 4054,
/// A response from the card issuer could not be validated.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5001 = 5001,
/// The card issuer reported an error.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5002 = 5002,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5003 = 5003,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5004 = 5004,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5006 = 5006,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5007 = 5007,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5008 = 5008,
/// The SDK identified an error in the 3D Secure process.
  Checkout3DSAuthenticationErrorThreeDS1ProtocolError5500 = 5500,
};
static NSString * _Nonnull const Checkout3DSAuthenticationErrorDomain = @"Checkout3DS.AuthenticationError";

@class NSString;

/// The class used to provide input parameters required for an authentication request.
SWIFT_CLASS_NAMED("AuthenticationParameters")
@interface Checkout3DSAuthenticationParameters : NSObject
/// The unique ID of the authentication session.
/// You will have received this in the response to the create session call to our Sessions API.
@property (nonatomic, readonly, copy) NSString * _Nonnull sessionID;
/// The session secret. You will have received this in the response to the create session
/// call to our Sessions API.
@property (nonatomic, readonly, copy) NSString * _Nonnull sessionSecret;
/// The name of the customer’s card scheme.
/// You will have received this in the response to the create session call to our Sessions API.
/// Used to display the scheme’s logo on the progress user interface.
/// Example: <code>Visa</code>, <code>Mastercard</code>
@property (nonatomic, readonly, copy) NSString * _Nonnull scheme;
/// Initializes an AuthenticationParameters object.
/// \param sessionID The unique ID of the authentication session.
/// You will have received this in the response to the create session call to our Sessions API.
///
/// \param sessionSecret The session secret. You will have received this in the response to the create session
/// call to our Sessions API.
///
/// \param scheme The name of the customer’s card scheme. You will have received this in the response to the create session call to our Sessions API.
/// Used to display the scheme’s logo on the progress user interface. Example: Visa, Mastercard.
///
- (nonnull instancetype)initWithSessionID:(NSString * _Nonnull)sessionID sessionSecret:(NSString * _Nonnull)sessionSecret scheme:(NSString * _Nonnull)scheme OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIFont;
@class UIColor;

/// A basic customization protocol providing a font and a text color.
/// This protocol is conformed to by all customization types (see <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a>, <a href="x-source-tag://LabelCustomization">LabelnCustomization</a>,
/// <a href="x-source-tag://EntrySelectionCustomization">EntrySelectionCustomization</a>, and <a href="x-source-tag://ToolbarCustomization">ToolbarCustomization</a> for more specific view-related customizations.)
SWIFT_PROTOCOL_NAMED("Customization")
@protocol Checkout3DSCustomization
/// The font of the text used on the view.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The color of the text on the view.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
@end

@class NSNumber;

/// Customization for the buttons that appear on the challenge screen.
SWIFT_PROTOCOL_NAMED("ButtonCustomization")
@protocol Checkout3DSButtonCustomization <Checkout3DSCustomization>
/// The background color of the button.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius of the button.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve style for the border of the button.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The width of the border for the button.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The color of the border for the button.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
@property (nonatomic, readonly) CGSize shadowOffset;
@property (nonatomic, readonly) CGFloat shadowRadius;
@property (nonatomic, readonly) float shadowOpacity;
@end


SWIFT_PROTOCOL_NAMED("ButtonCustomizations")
@protocol Checkout3DSButtonCustomizations
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull verifyButtonCustomization;
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull continueFlowButtonCustomization;
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull nextButtonCustomization;
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull cancelButtonCustomization;
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull resendButtonCustomization;
@end

enum Checkout3DSEnvironment : NSInteger;
@class NSLocale;
@protocol Checkout3DSUICustomization;
@class NSURL;
@class NSSet;

/// The main class of the SDK that performs payment authentication and returns a list of warnings collected by the SDK concerning security.
SWIFT_CLASS("_TtC11Checkout3DS18Checkout3DSService")
@interface Checkout3DSService : NSObject
/// Initializes a Checkout3DSService object with default arguments.
- (nonnull instancetype)init;
/// Initializes a Checkout3DSService object.
/// \param environment (optional) The Checkout.com environment that the SDK will connect to. If no value is provided, the default is production. See <a href="x-source-tag://Environment">Environment</a> for more information.
/// <ul>
///   <li>
///     <code>sandbox</code>: enables you to test with Checkout.com’s systems without connecting to real card issuers or impacting real card holders.
///   </li>
///   <li>
///     <code>production</code>: to process real transactions with real cards.
///   </li>
/// </ul>
///
/// \param locale (optional) The customer’s locale and preferred language, used to localise the user interface. If no value is set, the device locale is used. (E.g. “en_GB”)
///
/// \param uiCustomization The customizations for the challenge user interface. See <a href="x-source-tag://UICustomization">UICustomization</a> for more information.
///
- (nonnull instancetype)initWithEnvironment:(enum Checkout3DSEnvironment)environment locale:(NSLocale * _Nonnull)locale uiCustomization:(id <Checkout3DSUICustomization> _Nonnull)uiCustomization appURL:(NSURL * _Nullable)appURL;
/// Method to start the the authentication, passing the values you received in the Sessions API response into <code>authenticationParameters</code>.
/// note:
/// Ensure there is a key window available (a <code>UIWindow</code> where <code>UIWindow.isKeyWindow</code> is <code>true</code>).
/// This is usually the case, except for particular circumstances such as when <code>viewDidLoad</code> is called for the first <code>UIViewController</code> on app launch,
/// before a key window has been assigned.
/// \param authenticationParameters The authentication parameters, including <code>sessionId</code>, <code>sessionSecret</code>, and <code>scheme</code>.
///
/// \param completionHandler Closure called on completion with the following value:
///
/// \param error If authentication fails, an <code>NSError</code> indicating the reason for failure, otherwise <code>nil</code>.
///
- (void)authenticateWithAuthenticationParameters:(Checkout3DSAuthenticationParameters * _Nonnull)authenticationParameters completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completionHandler;
/// A method your app can optionally call to bring the challenge UI to the foreground.
/// That’s useful when the user is returning from their banking app (when they call your appURL) as part of an out-of-band challenge.
/// The method will return true if an active authentication session is found, or will otherwise return false.
/// Note : The maximum allowed URL length is 211 characters.
/// \param url The deep link URL provided to the app by an app that handles out-of-band authentication.
///
+ (BOOL)handleAppURLWithUrl:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
/// Method to check for warnings of any potential security warnings or of rejected configuration requests.
/// Use when initializing the SDK, or any time afterwards.
/// note:
/// this method blocks the calling thread. It is recommended to call this on a
/// background thread and not the main thread.
///
/// returns:
/// a collection of any warnings gathered by the 3DS SDK.
- (NSSet * _Nonnull)getWarnings SWIFT_WARN_UNUSED_RESULT;
/// Frees up resources that are used by <code>Checkout3DSService</code>.
- (void)cleanup;
@end





/// A <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultButtonCustomization")
@interface Checkout3DSDefaultButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
/// Initializes a DefaultButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nullable)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A  DefaultButtonCustomizations class for the different buttons that appear on the challenge screen.
SWIFT_CLASS_NAMED("DefaultButtonCustomizations")
@interface Checkout3DSDefaultButtonCustomizations : NSObject <Checkout3DSButtonCustomizations>
/// The ButtonCustomization object for customizing the verify button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull verifyButtonCustomization;
/// The ButtonCustomization object for customizing the continue button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull continueFlowButtonCustomization;
/// The ButtonCustomization object for customizing the next button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull nextButtonCustomization;
/// The ButtonCustomization object for customizing the cancel button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull cancelButtonCustomization;
/// The ButtonCustomization object for customizing the resend button on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomization> _Nonnull resendButtonCustomization;
- (nonnull instancetype)init;
/// Initializes a DefaultButtonCustomizations object for verify, continue, next, cancel and resend buttons and also allows the customization of the buttons if needed.
- (nonnull instancetype)initWithVerifyButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)verifyButtonCustomization continueFlowButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)continueFlowButtonCustomization nextButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)nextButtonCustomization cancelButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)cancelButtonCustomization resendButtonCustomization:(id <Checkout3DSButtonCustomization> _Nonnull)resendButtonCustomization OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the cancel button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultCancelButtonCustomization")
@interface Checkout3DSDefaultCancelButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The text to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
/// The background color to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The background cornor radius to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The background corner curve to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The text border width to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity to be set for DefaultCancelButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultCancelButtonCustomization object which is available for iOS 13.0 and later.
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text backgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultCancelButtonCustomization object.
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text backgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the continue button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultContinueButtonCustomization")
@interface Checkout3DSDefaultContinueButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultContinueButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultContinueButtonCustomization object available for iOS 13.0 and later.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultContinueButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// Customization for the text field on the challenge screen, for the text one-time passcode challenge.
SWIFT_PROTOCOL_NAMED("EntrySelectionCustomization")
@protocol Checkout3DSEntrySelectionCustomization <Checkout3DSCustomization>
/// The width of the border for the text field.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The color of the border for the text field. To get the <code>CGColor</code> version of a <code>UIColor</code> object, access the <code>cgColor</code> instance property of <code>UIColor</code>.
@property (nonatomic, readonly) CGColorRef _Nonnull borderColor;
/// The radius for the corner of the text field.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve style for the border of the text field.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The border style of the text field.
@property (nonatomic, readonly) UITextBorderStyle borderStyle;
/// The background color of the text box.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The color of the selection element when it is not selected.
/// For example, the radio buttons for the ‘Single Select’ challenge flow.
@property (nonatomic, readonly, strong) UIColor * _Nonnull unselectedColor;
/// The color of the selection element. For example, the radio buttons for the ‘Single Select’ challenge flow.
@property (nonatomic, readonly, strong) UIColor * _Nonnull selectedColor;
@end


/// A <a href="x-source-tag://EntrySelectionCustomization">EntrySelectionCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultEntrySelectionCustomization")
@interface Checkout3DSDefaultEntrySelectionCustomization : NSObject <Checkout3DSEntrySelectionCustomization>
/// The border width color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The shadow color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) CGColorRef _Nonnull borderColor;
/// The corner radius to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly) UITextBorderStyle borderStyle;
/// The background color to be set for DefaultEntrySelectionCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The color of the selection element when it is not selected.
/// For example, the radio buttons for the ‘Single Select’ challenge flow.
@property (nonatomic, readonly, strong) UIColor * _Nonnull unselectedColor;
/// The color of the selection element. For example, the radio buttons for the ‘Single Select’ challenge flow.
@property (nonatomic, readonly, strong) UIColor * _Nonnull selectedColor;
- (nonnull instancetype)init;
/// Initializes a DefaultEntrySelectionCustomization object which is available for iOS 13.0 and later.
- (nonnull instancetype)initWithBorderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nonnull)borderColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderStyle:(UITextBorderStyle)borderStyle backgroundColor:(UIColor * _Nonnull)backgroundColor unselectedColor:(UIColor * _Nonnull)unselectedColor selectedColor:(UIColor * _Nonnull)selectedColor OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13);
/// Initializes a DefaultEntrySelectionCustomization object supporting from iOS 11 and obsoleted for iOS 13.
- (nonnull instancetype)initWithBorderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nonnull)borderColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderStyle:(UITextBorderStyle)borderStyle backgroundColor:(UIColor * _Nonnull)backgroundColor unselectedColor:(UIColor * _Nonnull)unselectedColor selectedColor:(UIColor * _Nonnull)selectedColor OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=11,obsoleted=13);
@end


/// Customization for the footer on the challenge screen.
SWIFT_PROTOCOL_NAMED("FooterCustomization")
@protocol Checkout3DSDefaultFooterCustomization <Checkout3DSCustomization>
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The font of the heading for each expandable footer item.
@property (nonatomic, readonly, strong) UIFont * _Nonnull labelFont;
/// The text color of the heading for each expandable footer item.
@property (nonatomic, readonly, strong) UIColor * _Nonnull labelTextColor;
/// The color for the expandable disclosure indicator for each expandable footer item.
@property (nonatomic, readonly, strong) UIColor * _Nonnull expandIndicatorColor;
@end


/// A <a href="x-source-tag://DefaultFooterCustomization">DefaultFooterCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultFooterCustomization")
@interface Checkout3DSDefaultFooterCustomization : NSObject <Checkout3DSDefaultFooterCustomization>
/// The background color to be set for DefaultFooterCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The font to be set for DefaultFooterCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultFooterCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The font of the heading for each expandable footer item.
@property (nonatomic, readonly, strong) UIFont * _Nonnull labelFont;
/// The text color of the heading for each expandable footer item.
@property (nonatomic, readonly, strong) UIColor * _Nonnull labelTextColor;
/// The color for the expandable disclosure indicator for each expandable footer item.
@property (nonatomic, readonly, strong) UIColor * _Nonnull expandIndicatorColor;
- (nonnull instancetype)init;
/// Initializes a DefaultFooterCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor labelFont:(UIFont * _Nonnull)labelFont labelTextColor:(UIColor * _Nonnull)labelTextColor expandIndicatorColor:(UIColor * _Nonnull)expandIndicatorColor OBJC_DESIGNATED_INITIALIZER;
@end


/// Customization for the labels that appear on the challenge screen.
SWIFT_PROTOCOL_NAMED("LabelCustomization")
@protocol Checkout3DSLabelCustomization <Checkout3DSCustomization>
/// The color of the heading text on the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull headingTextColor;
/// The font of the heading text on the challenge screen.
@property (nonatomic, readonly, strong) UIFont * _Nonnull headingFont;
@end


/// A <a href="x-source-tag://LabelCustomization">LabelCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultLabelCustomization")
@interface Checkout3DSDefaultLabelCustomization : NSObject <Checkout3DSLabelCustomization>
/// The color of the heading text on the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull headingTextColor;
/// The font of the heading text on the challenge screen.
@property (nonatomic, readonly, strong) UIFont * _Nonnull headingFont;
/// The font of the DefaultLabelCustomizationt on the challenge screen.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color of the DefaultLabelCustomizationt on the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
- (nonnull instancetype)init;
/// Initializes a DefaultLabelCustomization object.
- (nonnull instancetype)initWithHeadingTextColor:(UIColor * _Nonnull)headingTextColor headingFont:(UIFont * _Nonnull)headingFont font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the next button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultNextButtonCustomization")
@interface Checkout3DSDefaultNextButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultNextButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultNextButtonCustomization object available for iOS 13.0 and later.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultNextButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the resend button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultResendButtonCustomization")
@interface Checkout3DSDefaultResendButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultResendButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultResendButtonCustomization object available for iOS 13.0 and later.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultResendButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// Class used to provide system colors available from iOS 13 seamlessly in all supported iOS versions.
SWIFT_CLASS_NAMED("DefaultSystemColor")
@interface Checkout3DSDefaultSystemColor : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// The color for text labels that contain primary content.
/// note:
/// see <a href="https://developer.apple.com/documentation/uikit/uicolor/3173131-label">Apple’s documentation</a> for further info
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull label;)
+ (UIColor * _Nonnull)label SWIFT_WARN_UNUSED_RESULT;
/// The color for text labels that contain secondary content.
/// note:
/// see <a href="https://developer.apple.com/documentation/uikit/uicolor/3173136-secondarylabel">Apple’s documentation</a> for further info
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondaryLabel;)
+ (UIColor * _Nonnull)secondaryLabel SWIFT_WARN_UNUSED_RESULT;
/// A sixth-level shade of grey that adapts to the environment.
/// note:
/// see <a href="https://developer.apple.com/documentation/uikit/uicolor/3255075-systemgray6">Apple’s documentation</a> for further info
/// :nodoc:
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray6;)
+ (UIColor * _Nonnull)systemGray6 SWIFT_WARN_UNUSED_RESULT;
@end


/// Customization for the navigation bar on the challenge screen.
SWIFT_PROTOCOL_NAMED("ToolbarCustomization")
@protocol Checkout3DSToolbarCustomization <Checkout3DSCustomization>
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The title for the navigation bar for the challenge screen.
@property (nonatomic, readonly, copy) NSString * _Nullable headerTitle;
/// The title for the dismissal button on the navigation bar for the challenge screen.
@property (nonatomic, readonly, copy) NSString * _Nullable buttonTitle;
@end


/// A <a href="x-source-tag://ToolbarCustomization">ToolbarCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultToolbarCustomization")
@interface Checkout3DSDefaultToolbarCustomization : NSObject <Checkout3DSToolbarCustomization>
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The title for the navigation bar for the challenge screen.
@property (nonatomic, readonly, copy) NSString * _Nullable headerTitle;
/// The title for the dismissal button on the navigation bar for the challenge screen.
@property (nonatomic, readonly, copy) NSString * _Nullable buttonTitle;
/// The font of title in the navigation bar of the challenge screen
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
- (nonnull instancetype)init;
/// Initializes a DefaultToolbarCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor headerTitle:(NSString * _Nullable)headerTitle buttonTitle:(NSString * _Nullable)buttonTitle font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor OBJC_DESIGNATED_INITIALIZER;
@end

@protocol Checkout3DSWhitelistCustomization;

/// Used to provide objects that specify user interface customizations for the 3D Secure 2 challenge screens.
SWIFT_PROTOCOL_NAMED("UICustomization")
@protocol Checkout3DSUICustomization
/// The customization for the navigation bar on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSToolbarCustomization> _Nonnull toolbarCustomization;
/// The customization for the labels on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSLabelCustomization> _Nonnull labelCustomization;
/// The customization for the text field on the challenge screen,
/// for the text one-time passcode challenge.
@property (nonatomic, readonly, strong) id <Checkout3DSEntrySelectionCustomization> _Nonnull entrySelectionCustomization;
/// The customization for the buttons on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomizations> _Nonnull buttonCustomizations;
/// The customization for the footer on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSDefaultFooterCustomization> _Nonnull footerCustomization;
/// The customization for whitelist on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSWhitelistCustomization> _Nonnull whitelistCustomization;
@end


/// A default customization object with pre-defined colors and fonts.
/// You may use this object to access other default customization objects.
SWIFT_CLASS_NAMED("DefaultUICustomization")
@interface Checkout3DSDefaultUICustomization : NSObject <Checkout3DSUICustomization>
/// The toolbar customization object for the navigation bar on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSToolbarCustomization> _Nonnull toolbarCustomization;
/// The customization for the labels that appear on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSLabelCustomization> _Nonnull labelCustomization;
/// The customization for the text field on the challenge screen,
/// for the text one-time passcode challenge.
@property (nonatomic, readonly, strong) id <Checkout3DSEntrySelectionCustomization> _Nonnull entrySelectionCustomization;
/// The customization for the buttons that appear on the challenge screen.
@property (nonatomic, readonly, strong) id <Checkout3DSButtonCustomizations> _Nonnull buttonCustomizations;
/// The customization for the footer that appear on the challenge screen.
@property (nonatomic, strong) id <Checkout3DSDefaultFooterCustomization> _Nonnull footerCustomization;
/// The customization for the WhitelistCustomization object that appear on the challenge screen.
@property (nonatomic, strong) id <Checkout3DSWhitelistCustomization> _Nonnull whitelistCustomization;
/// Creates a <a href="x-source-tag://UICustomization">UICustomization</a> object with default customizations.
- (nonnull instancetype)init;
/// Creates a <a href="x-source-tag://UICustomization">UICustomization</a> object with the ability to pass in
/// other customization objects. If any are excluded from initialisation, the appropiate default customization
/// object will be used.
/// \param toolbarCustomization The toolbar customization object for the navigation bar on the challenge screen.
/// If this is omitted, a <a href="x-source-tag://DefaultToolbarCustomization">DefaultToolbarCustomization</a> object will be used.
///
/// \param labelCustomization The customization for the labels that appear on the challenge screen.
/// If this is omitted, a <a href="x-source-tag://DefaultLabelCustomization">DefaultLabelCustomization</a> object will be used.
///
/// \param entrySelectionCustomization The customization for the text field on the challenge screen, for the text one-time passcode challenge.
/// If this is omitted, a <a href="x-source-tag://DefaultButtonCustomization">DefaultButtonCustomization</a> objects will be used.
///
/// \param buttonCustomizations The customization for the buttons that appear on the challenge screen.
/// If this is omitted, a <a href="x-source-tag://DefaultToolbarCustomization">DefaultToolbarCustomization</a> object will be used.
///
- (nonnull instancetype)initWithToolbarCustomization:(id <Checkout3DSToolbarCustomization> _Nonnull)toolbarCustomization labelCustomization:(id <Checkout3DSLabelCustomization> _Nonnull)labelCustomization entrySelectionCustomization:(id <Checkout3DSEntrySelectionCustomization> _Nonnull)entrySelectionCustomization buttonCustomizations:(id <Checkout3DSButtonCustomizations> _Nonnull)buttonCustomizations footerCustomization:(id <Checkout3DSDefaultFooterCustomization> _Nonnull)footerCustomization whitelistCustomization:(id <Checkout3DSWhitelistCustomization> _Nonnull)whitelistCustomization OBJC_DESIGNATED_INITIALIZER;
@end


/// The default <a href="x-source-tag://ButtonCustomization">ButtonCustomization</a> object for the verify button on the challenge screen.
SWIFT_CLASS_NAMED("DefaultVerifyButtonCustomization")
@interface Checkout3DSDefaultVerifyButtonCustomization : NSObject <Checkout3DSButtonCustomization>
/// The background color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull backgroundColor;
/// The corner radius to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGFloat cornerRadius;
/// The corner curve to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CALayerCornerCurve _Nullable cornerCurve;
/// The font to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly, strong) UIFont * _Nonnull font;
/// The text color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly, strong) UIColor * _Nonnull textColor;
/// The border width color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGFloat borderWidth;
/// The border color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable borderColor;
/// The shadow color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGColorRef _Nullable shadowColor;
/// The shadow offset color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGSize shadowOffset;
/// The shadow radius color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) CGFloat shadowRadius;
/// The shadow opacity color to be set for DefaultVerifyButtonCustomization object.
@property (nonatomic, readonly) float shadowOpacity;
- (nonnull instancetype)init;
/// Initializes a DefaultVerifyButtonCustomization object available for iOS 13.0 and later.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius cornerCurve:(CALayerCornerCurve _Nonnull)cornerCurve font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=13.0);
/// Initializes a DefaultVerifyButtonCustomization object.
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor cornerRadius:(CGFloat)cornerRadius font:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nullable)borderColor shadowColor:(CGColorRef _Nullable)shadowColor shadowOffset:(CGSize)shadowOffset shadowRadius:(CGFloat)shadowRadius shadowOpacity:(float)shadowOpacity OBJC_DESIGNATED_INITIALIZER;
@end


/// Customization for the footer on the challenge screen.
SWIFT_PROTOCOL_NAMED("WhitelistCustomization")
@protocol Checkout3DSWhitelistCustomization <Checkout3DSCustomization>
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nullable switchTintColor;
@end


/// A <a href="x-source-tag://DefaultWhitelistCustomization">DefaultWhitelistCustomization</a> object with default fonts and colors.
SWIFT_CLASS_NAMED("DefaultWhitelistCustomization")
@interface Checkout3DSDefaultWhitelistCustomization : NSObject <Checkout3DSWhitelistCustomization>
/// The font text on the navigation bar for the challenge screen.
@property (nonatomic, strong) UIFont * _Nonnull font;
/// The background color of the text on navigation bar for the challenge screen.
@property (nonatomic, strong) UIColor * _Nonnull textColor;
/// The background color of the navigation bar for the challenge screen.
@property (nonatomic, readonly, strong) UIColor * _Nullable switchTintColor;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFont:(UIFont * _Nonnull)font textColor:(UIColor * _Nonnull)textColor switchTintColor:(UIColor * _Nullable)switchTintColor OBJC_DESIGNATED_INITIALIZER;
@end




/// An environment that specifies which endpoint to connect to during the 3DS flow.
typedef SWIFT_ENUM_NAMED(NSInteger, Checkout3DSEnvironment, "Environment", open) {
/// A  case for environment which connects to sandbox.
  Checkout3DSEnvironmentSandbox = 0,
/// A  case for environment which connects to production.
  Checkout3DSEnvironmentProduction = 1,
};


















/// Represents a warning produced by the 3DS SDK, either due to potential security issues found, or to communicate a rejected configuration request.
typedef SWIFT_ENUM_NAMED(NSInteger, Checkout3DSWarning, "Warning", open) {
/// The appURL provided exceeds 211 characters and so has been ignored.
  Checkout3DSWarningAppURLTooLong = 0,
/// The appURL is not in a recognised Universal App Link format and so has been ignored.
  Checkout3DSWarningAppURLFormatInvalid = 1,
/// A debugger is attached to the App.
  Checkout3DSWarningDebuggerAttached = 2,
/// A emulator is being used to run the App.
  Checkout3DSWarningRunningOnSimulator = 3,
/// The device is jailbroken.
  Checkout3DSWarningJailbroken = 4,
/// The integrity of the SDK has been tampered.
  Checkout3DSWarningIntegrityTampered = 5,
};


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
